name: CI/CD Deployment

# Когда запускать пайплайн:
on:
  push:
    branches:
      - prod  # Ветка, при пуше в которую будет запускаться деплой

# Описание Jobs (задач):
jobs:
  deploy:
    # Указание на тип среды, в которой будет выполняться пайплайн
    runs-on: ubuntu-latest  # Этот runner будет использоваться для выполнения пайплайна

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3  # Используется для клонирования репозитория в runner

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Добавить сервер в список известных хостов для предотвращения запроса на подтверждение
          ssh-keyscan -t rsa your.server.com >> ~/.ssh/known_hosts

      # Шаг 3: Копирование файлов на сервер
      - name: Copy files to server (Debian)
        run: |
          rsync -avz --exclude='.git' ./ pitsa@185.188.181.246:/usersService # Копирование файлов на сервер с исключением папки .git

      # Шаг 4: Деплой приложения на сервере
      - name: Deploy application
        run: |
          ssh pitsa@185.188.181.246 << 'EOF'  # Подключение по SSH
          docker-compose pull  # Обновление образов Docker
          docker-compose up -d --build  # Перезапуск контейнеров с новым кодом
          EOF
